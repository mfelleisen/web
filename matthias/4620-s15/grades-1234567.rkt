#lang racket 

;; ---------------------------------------------------------------------------------------------------
(define grades
  '(
    ;                                    WARMUP HW1   HW2   HW3  PROJ   HW4   Pro1  HW5   HW6   HW7
    ("Tran, Anh               not enr. "  7/10  8/10  8/10  7/10 10/15  6/10  8/10  6/10  7/10  6/10)
    ("Boehman, Isaac D.       000594655"  6/10  8/10  8/10  7/10 10/15  6/10  8/10  6/10  7/10  6/10)
    ("Bower, Jonathan H.      000546715"  9/10  7/10  9/10  7/10 11/15 10/10  9/10  9/10 10/10  9/10)
    ("Cheung, Howard Y.       001997308"  6/10  6/10  6/10  6/10 13/15  8/10  5/10 10/10  9/10 10/10)
    ("Coates, Joshua C.       000515655" 10/10  8/10  9/10  8/10 14/15  7/10  7/10 10/10  7/10  9/10)
    ("Corbett, David S.       000535066" 10/10  9/10  8/10 10/10 12/15  8/10 10/10 10/10 10/10  9/10)
    ("Furtado, Paul A.        000569166"    #f  8/10  8/10  8/10 11/15  9/10 10/10  7/10  8/10 10/10)
    ("Jensen, Robert C.       000078846"  7/10  6/10  6/10  6/10 13/15  8/10  5/10 10/10  9/10 10/10)
    ("Kelly, Eric             000581357"  5/10  9/10 10/10 10/10 13/15  9/10 10/10  9/10  8/10 10/10)
    ("Kolek, Christopher W.   000519019"  9/10  7/10  9/10  7/10 11/15 10/10  9/10  9/10 10/10  9/10)
    ("Lin, Feng-Yun           000522265" 10/10  9/10  8/10 10/10 12/15  8/10 10/10 10/10 10/10  9/10)
    ("Nimick, Francis G.      000589610"  5/10  9/10 10/10 10/10 13/15  9/10 10/10  9/10  8/10 10/10)
    ("Silva, David M.         000526391" 10/10  8/10  9/10  8/10 14/15  7/10  7/10 10/10  7/10  9/10)
    ("Ukani, Ali A.           000513976"  7/10  9/10  8/10  8/10 11/15  9/10 10/10  7/10  8/10 10/10)
    ))

(define clean (lambda (x) (if x x 0)))

(define gpas 
  (for/list ((one grades))
    (define scores (map clean (rest one)))
    (~a (first one)
        " "
        (~r (/ (apply + scores) (length scores))
            #:min-width 3
            #:pad-string "0"
            #:precision 2))))

(pretty-print gpas)
