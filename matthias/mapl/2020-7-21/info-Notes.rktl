((3) 3 (((lib "scribble/decode-struct.rkt") . deserialize-info:part-index-desc-v0) ((lib "scribble/render-struct.rkt") . deserialize-info:mobile-root-v0) ((lib "scribble/core.rkt") . deserialize-info:element-v0)) 25 ("Float" (q tech "float") "Integer" (q tech "integer") (p+ #"../ppl-web/docs/2020-7-21/Notes/note_2-json.html" . unix) "figure" "value" (q part "note:0-asm") "String" (q part "notes") "fig:fsm" (c counter c (c (? . 5) c (? . 10))) (p+ #"../ppl-web/docs/2020-7-21/Notes/note_0-asm.html" . unix) (q tech "string") "fig:inf-asm" (c counter c (c (? . 5) c (? . 14))) (q part "note:2-json") "An Infinite State Machine" (q part "An_Infinite_State_Machine") (c (? . 17)) (q 1) "Finite State Machines" (0) (q part "Finite_State_Machines") (c (? . 21))) () (c (1 #f) h ! (equal) ((c index-entry c (? . 1)) c (c (? . 0)) c (c (2 italic (? . 0))) q tech) ((? . 1) v! #f (? . 1) #f (? . 4) #f) ((c counter c (c (? . 5) c (? . 10) c (? . 6))) . 40) ((c index-entry c (? . 3)) c (c (? . 2)) c (c (2 italic (? . 2))) q tech) ((? . 3) v! #f (? . 3) #f (? . 4) #f) ((c counter c (c (? . 5) c (? . 14) c (? . 6))) . 41) ((? . 7) v! (q "Implementing" "\n" "Abstract State Machines") (? . 7) (? . 20) (? . 12) #t) ((c index-entry c (? . 13)) c (c (? . 8)) c (c (2 italic (? . 8))) q tech) ((? . 9) v! (q "Notes on Machines and Programming Languages") (? . 9) () (p+ #"../ppl-web/docs/2020-7-21/Notes/index.html" . unix) #t) ((? . 11) v! #f (? . 11) #f (? . 12) #f) ((? . 13) v! #f (? . 13) #f (? . 4) #f) ((? . 15) v! #f (? . 15) #f (? . 12) #f) ((? . 16) v! (q "JSON: Simplicity and Complexity") (? . 16) (q 2) (? . 4) #t) ((c index-entry c (? . 18)) c (c (? . 17)) c (c (2 #f (? . 19))) c (? . 22)) ((? . 18) v! (? . 19) (? . 18) (c 2 ? . 20) (? . 12) #f) ((c index-entry c (? . 23)) c (c (? . 21)) c (c (2 #f (? . 24))) c (? . 22)) ((? . 23) v! (? . 24) (? . 23) (c 1 ? . 20) (? . 12) #f)))